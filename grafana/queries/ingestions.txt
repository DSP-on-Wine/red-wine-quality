1 - Monitoring of Data Error and Success Rates

SELECT
  date_trunc('minute', de.timestamp) AS time,
  CAST((SUM(de.unexpected_percent) / 100.0) AS DECIMAL(10,2)) AS data_error_ratio,
  COALESCE(COUNT(ds.id), 0) AS data_success_count
FROM
  data_errors de
  LEFT JOIN data_success ds
    ON date_trunc('minute', de.timestamp) = date_trunc('minute', ds.timestamp)
GROUP BY
  time
ORDER BY
  time;

2 - Data Errors by 30-Minute Intervals
SELECT
  TO_CHAR(
    TO_TIMESTAMP(FLOOR(EXTRACT(EPOCH FROM timestamp) / 1800) * 1800),
    'YYYY-MM-DD HH24:MI'
  ) AS time_interval,
  COUNT(*) AS count
FROM
  data_errors
WHERE
  timestamp >= NOW() - INTERVAL '5 hour'
GROUP BY
  TO_CHAR(
    TO_TIMESTAMP(FLOOR(EXTRACT(EPOCH FROM timestamp) / 1800) * 1800),
    'YYYY-MM-DD HH24:MI'
  )
ORDER BY
  time_interval;

3 - bar chart distribution of errors by type
select count(*), expectation from data_errors 
WHERE
timestamp >= NOW() - INTERVAL '2 day'
group by expectation

4. for Temporal Graph with the % of Invalid Data Samples Compared to Valid Data Samples in the Last 10 minutes

SELECT
  date_trunc('minute', timestamp) AS time,
  SUM(CASE WHEN unexpected_percent > 0 THEN 1 ELSE 0 END)::FLOAT / COUNT(*) * 100 AS invalid_percentage,
  SUM(CASE WHEN unexpected_percent = 0 THEN 1 ELSE 0 END)::FLOAT / COUNT(*) * 100 AS valid_percentage
FROM (
  SELECT 
    id,
    file_name,
    column_name,
    expectation,
    unexpected_percent,
    unexpected_index_query,
    observed_value,
    timestamp
  FROM data_errors
  UNION ALL
  SELECT 
    id,
    file_name,
    column_name,
    expectation,
    0.0 AS unexpected_percent, 
    unexpected_index_query,
    NULL AS observed_value,  
    timestamp
  FROM data_success
) AS combined_data
WHERE
  timestamp >= NOW() - INTERVAL '10 minutes'
GROUP BY
  time
ORDER BY
  time;

5. Error count per day


SELECT TO_CHAR(timestamp, 'YYYY-MM-DD') AS date, COUNT(*) AS count
FROM data_errors
GROUP BY TO_CHAR(timestamp, 'YYYY-MM-DD')
order by TO_CHAR(timestamp, 'YYYY-MM-DD')


6. Errors vs successes per day

WITH errors_per_day AS (
    SELECT 
        TO_CHAR(timestamp, 'YYYY-MM-DD') AS date,
        COUNT(*) AS error_count
    FROM 
        data_errors
    GROUP BY 
        TO_CHAR(timestamp, 'YYYY-MM-DD')
),
success_per_day AS (
    SELECT 
        TO_CHAR(timestamp, 'YYYY-MM-DD') AS date,
        COUNT(*) AS success_count
    FROM 
        data_success
    GROUP BY 
        TO_CHAR(timestamp, 'YYYY-MM-DD')
)
SELECT 
    COALESCE(e.date, s.date) AS date,
    COALESCE(e.error_count, 0) AS error_count,
    COALESCE(s.success_count, 0) AS success_count
FROM 
    errors_per_day e
FULL OUTER JOIN 
    success_per_day s
ON 
    e.date = s.date
ORDER BY 
    date;


7. distribution of errors by type

WITH errors_per_day AS (
    SELECT 
        TO_CHAR(timestamp, 'YYYY-MM-DD') AS date,
        COUNT(*) AS error_count
    FROM 
        data_errors
    GROUP BY 
        TO_CHAR(timestamp, 'YYYY-MM-DD')
),
success_per_day AS (
    SELECT 
        TO_CHAR(timestamp, 'YYYY-MM-DD') AS date,
        COUNT(*) AS success_count
    FROM 
        data_success
    GROUP BY 
        TO_CHAR(timestamp, 'YYYY-MM-DD')
)
SELECT 
    COALESCE(e.date, s.date) AS date,
    COALESCE(e.error_count, 0) AS error_count,
    COALESCE(s.success_count, 0) AS success_count
FROM 
    errors_per_day e
FULL OUTER JOIN 
    success_per_day s
ON 
    e.date = s.date
ORDER BY 
    date;
